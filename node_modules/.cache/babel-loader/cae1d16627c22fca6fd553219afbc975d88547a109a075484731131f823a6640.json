{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BeyhanAbaci\\\\projects\\\\monsters-rolodex\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Hook useState\nimport { useState, useEffect } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Array destructuring\n  // [value, setValue]\n  // each hooks only hooks into one value\n  const [searchField, setSearchField] = useState(\"\");\n  const [monsters, setMonsters] = useState([]);\n  console.log(\"render\");\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => setMonsters(users));\n  }, []);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  const filteredMonsters = monsters.filter(monster => {\n    return monster.name.toLocaleLowerCase().includes(searchField);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      placeholder: \"search monsters\",\n      onChangeHandler: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   // life cycle method\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) =>\n//         this.setState(() => {\n//           return {\n//             monsters: users,\n//           };\n//         })\n//       );\n//   }\n\n//   onSearchChange = (event) => {\n//     const searchField = event.target.value.toLocaleLowerCase();\n//     this.setState(() => {\n//       return {\n//         searchField,\n//       };\n//     });\n//   };\n\n//   render() {\n//     // destructuring this.state, see constructor\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n\n//     const filteredMonsters = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchField);\n//     });\n\n//     return (\n//       <div className=\"App\">\n//         <h1 className=\"app-title\">Monsters Rolodex</h1>\n//         <SearchBox\n//           className=\"monsters-search-box\"\n//           placeholder=\"search monsters\"\n//           onChangeHandler={onSearchChange}\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n_s(App, \"N8bxHPBl7OakOpz6ScGXSkVCzho=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","App","searchField","setSearchField","monsters","setMonsters","console","log","fetch","then","response","json","users","onSearchChange","event","searchFieldString","target","value","toLocaleLowerCase","filteredMonsters","filter","monster","name","includes"],"sources":["C:/Users/BeyhanAbaci/projects/monsters-rolodex/src/App.js"],"sourcesContent":["// Hook useState\nimport { useState, useEffect } from \"react\";\n\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nconst App = () => {\n  // Array destructuring\n  // [value, setValue]\n  // each hooks only hooks into one value\n  const [searchField, setSearchField] = useState(\"\");\n  const [monsters, setMonsters] = useState([]);\n\n  console.log(\"render\");\n\n  useEffect(() => {\n fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response) => response.json())\n    .then((users) => setMonsters(users));\n\n  }, [])\n \n  const onSearchChange = (event) => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  const filteredMonsters = monsters.filter((monster) => {\n    return monster.name.toLocaleLowerCase().includes(searchField);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Monsters Rolodex</h1>\n      <SearchBox\n        className=\"monsters-search-box\"\n        placeholder=\"search monsters\"\n        onChangeHandler={onSearchChange}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n};\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       monsters: [],\n//       searchField: \"\",\n//     };\n//   }\n\n//   // life cycle method\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) =>\n//         this.setState(() => {\n//           return {\n//             monsters: users,\n//           };\n//         })\n//       );\n//   }\n\n//   onSearchChange = (event) => {\n//     const searchField = event.target.value.toLocaleLowerCase();\n//     this.setState(() => {\n//       return {\n//         searchField,\n//       };\n//     });\n//   };\n\n//   render() {\n//     // destructuring this.state, see constructor\n//     const { monsters, searchField } = this.state;\n//     const { onSearchChange } = this;\n\n//     const filteredMonsters = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchField);\n//     });\n\n//     return (\n//       <div className=\"App\">\n//         <h1 className=\"app-title\">Monsters Rolodex</h1>\n//         <SearchBox\n//           className=\"monsters-search-box\"\n//           placeholder=\"search monsters\"\n//           onChangeHandler={onSearchChange}\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AACpE,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CS,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErBT,SAAS,CAAC,MAAM;IACjBU,KAAK,CAAC,4CAA4C,CAAC,CAC/CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKP,WAAW,CAACO,KAAK,CAAC,CAAC;EAEtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,EAAE;IAChEf,cAAc,CAACY,iBAAiB,CAAC;EACnC,CAAC;EAED,MAAMI,gBAAgB,GAAGf,QAAQ,CAACgB,MAAM,CAAEC,OAAO,IAAK;IACpD,OAAOA,OAAO,CAACC,IAAI,CAACJ,iBAAiB,EAAE,CAACK,QAAQ,CAACrB,WAAW,CAAC;EAC/D,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAI,SAAS,EAAC,WAAW;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/C,QAAC,SAAS;MACR,SAAS,EAAC,qBAAqB;MAC/B,WAAW,EAAC,iBAAiB;MAC7B,eAAe,EAAEW;IAAe;MAAA;MAAA;MAAA;IAAA,QAChC,eACF,QAAC,QAAQ;MAAC,QAAQ,EAAEM;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GA1FMlB,GAAG;AAAA,KAAHA,GAAG;AA4FT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}